import os
import random

def create_validation_set(main_train_dir, validation_dir, validation_ratio=0.3):
  """
  Creates a validation dataset from a main train directory.

  Args:
    main_train_dir (str): Path to the main train directory with class subfolders.
    validation_dir (str): Path to the empty validation directory with the same class subfolder structure.
    validation_ratio (float, optional): Ratio of files to move from each class subfolder to the validation set. Defaults to 0.3 (30%).
  """

  for class_dir in os.listdir(main_train_dir):
    class_path = os.path.join(main_train_dir, class_dir)
    if os.path.isdir(class_path):
      files = os.listdir(class_path)
      num_files = len(files)
      num_to_move = int(num_files * validation_ratio)

      # Handle cases where the number to move isn't an integer
      if num_to_move != num_files * validation_ratio:
        num_to_move = min(num_files, round(num_files * validation_ratio))  # Move at most all files

      selected_files = random.sample(files, num_to_move)  # Randomly select files

      for file in selected_files:
        source = os.path.join(class_path, file)
        destination = os.path.join(validation_dir, class_dir, file)
        #os.makedirs(os.path.dirname(destination), exist_ok=True)  # Create destination directory if needed
        os.rename(source, destination)  # Move file to validation set

if __name__ == "__main__":
  main_train_dir = "C:/Users/user/OneDrive/Masa端st端/malware_images_224"
  validation_dir = "C:/Users/user/OneDrive/Masa端st端/val_file"
  create_validation_set(main_train_dir, validation_dir)
